@*@model IEnumerable<Northwind.Store.Model.Supplier>*@
@model Northwind.Store.UI.Intranet.Areas.Admin.ViewModels.SupplierIndexViewModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form method="post" id="form1">
    <div class="d-flex flex-column">
        <div>
            <input asp-for="Command" type="hidden" />
            <input asp-for="Filter.CompanyName" placeholder="Search here ..." />
            <input asp-for="Paging.Page" type="hidden" />
            <input asp-for="Paging.Sort" type="hidden" />
            <input asp-for="Paging.SortDir" type="hidden" />
            <button data-command="search">Search</button>
        </div>
        <div>
            <table class="table table-striped table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th>
                            @*@Html.DisplayNameFor(model => model.CompanyName)*@
                            <button data-sort="CompanyName" data-command="order">CompanyName</button>
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(model => model.ContactName)*@
                            <button data-sort="ContactName" data-command="order">ContactName</button>
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(model => model.ContactTitle)*@
                            ContactTitle
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(model => model.Address)*@
                            Address
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(model => model.City)*@
                            City
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(model => model.Region)*@
                            Region
                        </th>
                        @*<th>
                        @Html.DisplayNameFor(model => model.PostalCode)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Country)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Phone)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Fax)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.HomePage)
                    </th>*@
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Items)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.CompanyName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ContactName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ContactTitle)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Address)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.City)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Region)
                            </td>
                            @*<td>
                            @Html.DisplayFor(modelItem => item.PostalCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Country)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Phone)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Fax)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.HomePage)
                        </td>*@
                            <td>
                                <a asp-action="Edit" asp-route-id="@item.SupplierId">Edit</a> |
                                <a asp-action="Details" asp-route-id="@item.SupplierId">Details</a> |
                                <a asp-action="Delete" asp-route-id="@item.SupplierId">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>

            </table>
        </div>
    </div>
    <div>
        @if (Model.Paging.PageCount > Model.Paging.PageSize)
        {
            int previous = Model.Paging.Page - 1;
            int next = Model.Paging.Page + 1;
            <button class="btn btn-light" data-page="1" data-command="paging">Primero</button>

            @if (previous > 0)
            {<button class="btn btn-light" data-page="@previous" data-command="paging">Anterior</button>}
            else
            { <button class="btn btn-light" data-page="@previous" data-command="paging" disabled>Anterior</button>}

            <span>Pág. @Model.Paging.Page / de @Model.Paging.PageCount<strong>Total Items: @Model.Paging.Count</strong></span>
            @if (next <= Model.Paging.PageCount)
            {
                <button class="btn btn-light" data-page="@next" data-command="paging">Siguiente</button>}
            else
            { <button class="btn btn-light" data-page="@next" data-command="paging" disabled>Siguiente</button>}

            @if (next <= Model.Paging.PageCount)
            {
                <button class="btn btn-light" data-page="@Model.Paging.PageCount" data-command="paging">Último</button>}
            else
            {<button class="btn btn-light" data-page="@Model.Paging.PageCount" data-command="paging" disabled>Último</button>}
        }
    </div>
</form>

<p>Cantidad de Registros: @Model.Paging.Count</p>

<script>(function enableGrid(formId) {

        let commands = document.querySelectorAll(`#${formId} button[data-command]`);
        commands.forEach(c => {
            c.addEventListener('click', function (event) {
                //event.preventDefault();

                let cm = this.dataset.command;

                switch (cm) {
                    case 'paging':
                        const page = document.querySelector(`#${formId} input[name="Paging.Page"]`);
                        page.value = this.dataset.page;
                        break;
                    case 'order':
                        const sort = document.querySelector(`#${formId} input[name="Paging.Sort"]`);
                        const sortDir = document.querySelector(`#${formId} input[name="Paging.SortDir"]`);

                        if (sort.value !== this.dataset.sort) {
                            sort.value = this.dataset.sort;
                            sortDir.value = 'ASC';
                        }
                        else {
                            sortDir.value = sortDir.value === 'ASC' ? 'DESC' : 'ASC';
                        }
                        break;
                }

                const command = document.querySelector(`#${formId} input[name="Command"]`);
                command.value = cm;
            });
        });

    })('form1');</script>